{"version":3,"sources":["components/playerForm.js","components/player.js","components/game.js","tennis.js","index.js"],"names":["PlayerForm","props","useState","name","setName","onSubmit","e","preventDefault","addPlayer","number","type","id","className","autoComplete","value","onChange","target","Player","Game","translateScore","0","1","2","3","scorePlayerOne","setScorePlayerOne","scorePlayerTwo","setScorePlayerTwo","haveAWinner","setHaveAWinner","scoreTable","setScoreTable","listScoreTable","map","scoreRow","message","updateScoreTable","playerTwo","score","playerOne","playerWithHighestScore","isDeuce","checkScore","scorePlOne","scorePlTwo","newScoreRow","btnWinPlOne","onClick","btnWinPlTwo","Tennis","players","setPlayers","games","setGames","playerList","player","gameList","game","newPlayer","length","editedplayerList","newGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.075023c2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction PlayerForm(props) {\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addPlayer(name, props.number);\r\n    setName(\"\");\r\n  }\r\n\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n    <input\r\n        type=\"text\"\r\n        id=\"new-player-input\"\r\n        className=\"input new-player\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn add\">\r\n        Ok\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PlayerForm;\r\n","import React from \"react\";\r\n\r\nfunction Player(props) {\r\n  return (\r\n    <div className=\"player\">\r\n      <label className=\"label-player\">\r\n          Player {props.number} : {props.name}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Game(props) {\r\n\r\n  let translateScore = {\r\n      0 : \"Love\",\r\n      1 : \"Fifteen\",\r\n      2 : \"Thirty\",\r\n      3 : \"Forty\"\r\n    }\r\n\r\n  const [scorePlayerOne, setScorePlayerOne] = useState(0);\r\n  const [scorePlayerTwo, setScorePlayerTwo] = useState(0);\r\n\r\n  const [haveAWinner, setHaveAWinner] = useState(false);\r\n\r\n  const [scoreTable, setScoreTable] = useState([]);\r\n\r\n  const listScoreTable = scoreTable.map(scoreRow => (\r\n            <li className=\"label-score-row\">\r\n                  {scoreRow.scorePlayerOne} {scoreRow.scorePlayerTwo}\r\n                <div className=\"message\">\r\n                  {scoreRow.message}\r\n                </div>\r\n            </li>\r\n      )\r\n    );\r\n\r\n  /*Add points player One*/\r\n  function addPointPlayerOne() {\r\n    setScorePlayerOne(++props.playerOne.score);\r\n    updateScoreTable();\r\n  }\r\n\r\n  /*Add points player Two*/\r\n  function addPointPlayerTwo() {\r\n    setScorePlayerTwo(++props.playerTwo.score);\r\n    updateScoreTable();\r\n  }\r\n\r\n  /*Update score table*/\r\n  function updateScoreTable() {\r\n\r\n    let message = checkScore();\r\n\r\n    let scorePlOne = <span className = \"tableScore\">\r\n                      {props.playerOne.name} :\r\n                      <span className = \"score\"> {translateScore[props.playerOne.score]} </span>\r\n                    </span>;\r\n    let scorePlTwo = <span className = \"tableScore\">\r\n                      <span className = \"score\"> {translateScore[props.playerTwo.score]} </span> :\r\n                       {props.playerTwo.name}\r\n                    </span>;\r\n\r\n      if(translateScore[props.playerOne.score] == null || translateScore[props.playerTwo.score] == null ){\r\n        scorePlOne = \"\";\r\n        scorePlTwo = \"\";\r\n      }\r\n\r\n      const newScoreRow = {\r\n        scorePlayerOne: scorePlOne,\r\n        scorePlayerTwo: scorePlTwo,\r\n        message: message\r\n      };\r\n\r\n      setScoreTable([...scoreTable, newScoreRow]);\r\n  }\r\n\r\n  /*Check scores player one and two*/\r\n  function checkScore(){\r\n\r\n    if(hasWinner()){\r\n      setHaveAWinner(true);\r\n      return playerWithHighestScore() + \" Wins\";\r\n    }\r\n\r\n    if(isDeuce()){\r\n      return \"Deuce\";\r\n    }\r\n\r\n    if(hasAdvantage()){\r\n      return \"Advantage : \" + playerWithHighestScore();\r\n    }\r\n  }\r\n\r\n  function isDeuce() {\r\n    let isDeuce = props.playerOne.score >= 3 &&\r\n     props.playerOne.score === props.playerTwo.score;\r\n\r\n    //Each player goes back to 3 when Deuce\r\n    if(isDeuce){\r\n      setScorePlayerOne(3);\r\n      setScorePlayerTwo(3);\r\n      props.playerOne.score = 3;\r\n      props.playerTwo.score = 3;\r\n    }\r\n\r\n\t\treturn isDeuce;\r\n\t}\r\n\r\n  function playerWithHighestScore() {\r\n\t\tif (props.playerOne.score > props.playerTwo.score) {\r\n\t\t\treturn props.playerOne.name;\r\n\t\t} else {\r\n\t\t\treturn props.playerTwo.name;\r\n\t\t}\r\n\t}\r\n\r\n   function hasWinner() {\r\n       return (props.playerTwo.score >= 4 && props.playerTwo.score >= props.playerOne.score + 2) ||\r\n        (props.playerOne.score >= 4 && props.playerOne.score >= props.playerTwo.score + 2)\r\n  \t}\r\n\r\n    function hasAdvantage() {\r\n    \t\treturn (props.playerTwo.score >= 4 && props.playerTwo.score === props.playerOne.score + 1) ||\r\n         (props.playerOne.score >= 4 && props.playerOne.score === props.playerTwo.score + 1)\r\n\t   }\r\n\r\n\r\n  function resetGame(){\r\n    props.playerOne.score = 0;\r\n    props.playerTwo.score = 0;\r\n    setScorePlayerOne(0);\r\n    setScorePlayerTwo(0);\r\n    setScoreTable([]);\r\n    setHaveAWinner(false);\r\n  }\r\n\r\n  var scorePlOne = <span className = \"score\"> {translateScore[scorePlayerOne]}</span>;\r\n  var scorePlTwo = <span className = \"score\">  {translateScore[scorePlayerTwo]} </span>;\r\n  var btnWinPlOne = <button type=\"button\" className=\"btnWin\" onClick={addPointPlayerOne}> win </button>;\r\n  var btnWinPlTwo =  <button type=\"button\" className=\"btnWin\" onClick={addPointPlayerTwo}> win </button>;\r\n\r\n  //In order to display Av\r\n  if(translateScore[props.playerOne.score] == null) {\r\n    scorePlOne = <span className = \"score\"> Av </span>;\r\n  }\r\n  if(translateScore[props.playerTwo.score] == null) {\r\n    scorePlTwo = <span className = \"score\"> Av </span>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"point\">\r\n      <ul>\r\n        {listScoreTable}\r\n      </ul>\r\n      <label className=\"label-score\">\r\n        {!haveAWinner &&\r\n          <span> {props.playerOne.name} : {scorePlOne} {btnWinPlOne} - </span>\r\n        }\r\n        {!haveAWinner &&\r\n          <span> {btnWinPlTwo} {scorePlTwo} : {props.playerTwo.name} </span>\r\n        }\r\n      </label>\r\n      {haveAWinner &&\r\n        <button type=\"button\" className=\"btnReset\" onClick={resetGame}> Reset </button>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState } from \"react\";\r\nimport PlayerForm from \"./components/playerForm\";\r\nimport Player from \"./components/player\";\r\nimport Game from \"./components/game\";\r\n\r\nfunction Tennis(props) {\r\n\r\n  const [players, setPlayers] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n\r\n  const playerList = players.map(player => (\r\n        <Player\r\n          name={player.name}\r\n          number={player.number}\r\n          score={player.score}\r\n        />\r\n      )\r\n    );\r\n\r\n    //A CHANGER : PEUX NE PAS METTRE DE LIST !!!!!!!!!!!!!!!!!\r\n    const gameList = games.map(game => (\r\n        <Game\r\n          playerOne={game.playerOne}\r\n          playerTwo={game.playerTwo}\r\n        />\r\n      )\r\n    );\r\n\r\n    function addPlayer(name, number) {\r\n      const newPlayer = {name: name, number: number};\r\n      setPlayers([...players, newPlayer]);\r\n    }\r\n\r\n    function startGame() {\r\n      const editedplayerList = players.map(player => {\r\n          return {...player, score: 0}\r\n      });\r\n      setPlayers(editedplayerList);\r\n      const newGame = {playerOne: editedplayerList[0], playerTwo: editedplayerList[1]};\r\n\r\n      setGames([...games, newGame]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"player stack-large\">\r\n        {playerList.length === 0 &&\r\n          <span>\r\n            Player 1 Name : <PlayerForm addPlayer={addPlayer} number=\"1\"/>\r\n          </span>\r\n        }\r\n        {playerList.length === 1 &&\r\n          <span>\r\n            Player 2 Name : <PlayerForm addPlayer={addPlayer} number=\"2\"/>\r\n          </span>\r\n        }\r\n          {playerList}\r\n          {playerList.length === 2 && gameList.length === 0 &&\r\n            <button type=\"button\" className=\"btn\" onClick={startGame}>\r\n              Start Game !\r\n            </button>\r\n          }\r\n          <div className=\"game-list\">\r\n            {gameList}\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Tennis;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Tennis from './tennis';\n\nReactDOM.render(\n  <React.StrictMode>\n  <div className=\"App\">\n    <header className=\"App-header\">\n      Tennis Game\n    </header>\n    <Tennis />\n  </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}